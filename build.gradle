buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
apply plugin: 'idea'

version = mod_version
group = 'com.github.tartaricacid'
archivesBaseName = 'touhoulittlemaid-1.19.2-release'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            jvmArgs "-XX:+AllowEnhancedClassRedefinition"
            workingDirectory project.file('run/client_a')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                touhou_little_maid {
                    source sourceSets.main
                }
            }
        }

        client2 {
            parent minecraft.runs.client
            workingDirectory project.file('run/client_b')
            args '--username', 'tartaric_acid'
            mods {
                touhou_little_maid {
                    source sourceSets.main
                }
            }
        }

        server {
            jvmArgs "-XX:+AllowEnhancedClassRedefinition"
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'touhou_little_maid'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                touhou_little_maid {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'touhou_little_maid', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                touhou_little_maid {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "touhou_little_maid.refmap.json"
    config "touhou_little_maid.mixins.json"
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        // Patchouli
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"

    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))

    // rei
    compileOnly fg.deobf("curse.maven:architectury-api-419699:${architectury_api_id}")
    compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${rei_version}")

    // emi
    // Forge (see below block as well if you use Forge Gradle)
    compileOnly fg.deobf("dev.emi:emi-forge:${emi_version}:api")
    compileOnly fg.deobf("dev.emi:emi-forge:${emi_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    runtimeOnly fg.deobf("teamtwilight:twilightforest:${twilight_forest_version}:universal")

    implementation fg.deobf("curse.maven:jade-324717:${jade_id}")
    implementation fg.deobf("curse.maven:the-one-probe-245211:${top_id}")

    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_forge}")

    runtimeOnly fg.deobf("curse.maven:citadel-331936:${citadel_id}")
    implementation fg.deobf("curse.maven:domestication-innovation-591149:${domestication_innovation_id}")

    implementation fg.deobf("curse.maven:slashblade-241596:${slashblade_id}")

    implementation fg.deobf("curse.maven:iron-chests-228756:${iron_chests_id}")

    runtimeOnly fg.deobf("curse.maven:carry-on-274259:${carry_on_id}")

    runtimeOnly "curse.maven:kotlin-for-forge-351264:${kotlin_id}"
    runtimeOnly fg.deobf("curse.maven:libipn-679177:${libipn_id}")
    implementation fg.deobf("curse.maven:inventory-profiles-next-495267:${ipn_id}")

    runtimeOnly fg.deobf("curse.maven:catalogue-459701:${catalogue_id}")

    implementation fg.deobf('curse.maven:timeless-and-classics-zero-1028108:5722043')

    implementation fg.deobf("maven.modrinth:simple-hats:1.19.2-0.3.2-forge")
    implementation fg.deobf("maven.modrinth:curios:1.19.2-5.1.6.3-forge")

    implementation fg.deobf("curse.maven:aquaculture-60028:5320128")
//    implementation fg.deobf("curse.maven:aquaculture-60028:4501726")

//    runtimeOnly fg.deobf("maven.modrinth:better-advancements:0.4.2.10-forge")

    runtimeOnly fg.deobf("maven.modrinth:embeddium:0.3.31+mc1.20.1")
    runtimeOnly fg.deobf('maven.modrinth:oculus:1.20.1-1.7.0')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Implementation-Title"  : project.name,
                "Implementation-Version": "${version}"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// 让 idea 主动下载前置库的源码和 Javadoc
// 新版本 idea 默认不会下载这两个，这虽然加快了构建速度，但是不方便调试
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
